(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{523:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"Stations"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"Position"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"lat"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"lng"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:88}};t.loc.source={body:"{\r\n  Stations {\r\n    id\r\n    name\r\n    Position {\r\n      lat\r\n      lng\r\n    }\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t},526:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"user"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"user_id"}},type:{kind:"NamedType",name:{kind:"Name",value:"uuid"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"Rents"},arguments:[{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"user_id"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"_eq"},value:{kind:"Variable",name:{kind:"Name",value:"user_id"}}}]}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"user_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"bike_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"Bike"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:149}};t.loc.source={body:"query user($user_id: uuid) {\r\n  Rents(where: {user_id: {_eq: $user_id}}) {\r\n    id\r\n    user_id\r\n    bike_id\r\n    Bike {\r\n      name\r\n    }\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.user=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,c=new Set;for(d.forEach((function(e){c.add(e)}));c.size>0;){var m=c;c=new Set,m.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){c.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"user")},565:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"user"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NamedType",name:{kind:"Name",value:"uuid"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"Users"},arguments:[{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"id"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"_eq"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}]}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"username"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:101}};t.loc.source={body:"query user($id: uuid) {\r\n  Users(where: {id: {_eq: $id}}) {\r\n    id\r\n    name\r\n    username\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.user=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,c=new Set;for(d.forEach((function(e){c.add(e)}));c.size>0;){var m=c;c=new Set,m.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){c.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"user")},566:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"return"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"rentId"}},type:{kind:"NamedType",name:{kind:"Name",value:"uuid"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"stationId"}},type:{kind:"NamedType",name:{kind:"Name",value:"uuid"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"bikeId"}},type:{kind:"NamedType",name:{kind:"Name",value:"uuid"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"update_Bikes"},arguments:[{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"id"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"_eq"},value:{kind:"Variable",name:{kind:"Name",value:"bikeId"}}}]}}]}},{kind:"Argument",name:{kind:"Name",value:"_set"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"isRented"},value:{kind:"BooleanValue",value:!0}},{kind:"ObjectField",name:{kind:"Name",value:"station_id"},value:{kind:"Variable",name:{kind:"Name",value:"stationId"}}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"returning"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"delete_Rents"},arguments:[{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"id"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"_eq"},value:{kind:"Variable",name:{kind:"Name",value:"rentId"}}}]}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"returning"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:290}};t.loc.source={body:"mutation return($rentId: uuid, $stationId: uuid, $bikeId: uuid) {\r\n  update_Bikes(where: {id: {_eq: $bikeId}}, _set: {isRented: true, station_id: $stationId}) {\r\n    returning {\r\n      id\r\n    }\r\n  }\r\n  delete_Rents(where: {id: {_eq: $rentId}}) {\r\n    returning {\r\n      id\r\n    }\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.return=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,c=new Set;for(d.forEach((function(e){c.add(e)}));c.size>0;){var m=c;c=new Set,m.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){c.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"return")},567:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"subscription",variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"Rents"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"user_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"bike_id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"Bike"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:98}};t.loc.source={body:"subscription {\r\n  Rents {\r\n    id\r\n    user_id\r\n    bike_id\r\n    Bike {\r\n      name\r\n    }\r\n  }\r\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t},591:function(e,n,t){"use strict";t.r(n);var d=t(28),r=(t(76),t(565)),o=t.n(r),l=t(526),c=t.n(l),m=t(523),v=t.n(m),f=t(566),k=t.n(f),S=t(567),h=t.n(S),N={name:"StationsPage",middleware:"authenticated",apollo:{Users:{query:o.a,prefetch:function(e){return{username:e.route.params.id}},variables:function(){return{id:this.$route.params.id}}},Rents:{query:c.a,subsccribeToMore:!0,prefetch:function(e){return{username:e.route.params.id}},variables:function(){return{user_id:this.$route.params.id}},subscribeToMore:{document:h.a,updateQuery:function(e,n){return n.subscriptionData.data}}},Stations:{query:v.a,prefetch:!0}},head:{title:"User Page"},methods:{handleLogOut:function(){this.$store.dispatch("logOut")},returns:function(e,n,t){var r=this;return Object(d.a)(regeneratorRuntime.mark((function d(){return regeneratorRuntime.wrap((function(d){for(;;)switch(d.prev=d.next){case 0:return d.prev=0,d.next=3,r.$apollo.mutate({mutation:k.a,variables:{rentId:e,stationId:n,bikeId:t}});case 3:d.next=8;break;case 5:d.prev=5,d.t0=d.catch(0),console.log(d.t0);case 8:case"end":return d.stop()}}),d,null,[[0,5]])})))()}}},_=t(44),y=t(149),F=t.n(y),w=t(324),O=t(521),D=t(217),V=t(140),E=t(517),j=t(584),component=Object(_.a)(N,(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("v-container",[e._l(e.Users,(function(n){return t("section",{key:n.id},[t("h3",[e._v("\n      "+e._s(n.name)+"\n    ")])])})),e._v(" "),e._l(e.Rents,(function(n){return t("section",{key:n.id},[t("h3",[e._v("\n       "+e._s(n.Bike.name)+"\n     ")]),e._v(" "),t("v-menu",{attrs:{"offset-y":""},scopedSlots:e._u([{key:"activator",fn:function(n){var d=n.on,r=n.attrs;return[t("v-btn",e._g(e._b({attrs:{color:"primary",dark:""}},"v-btn",r,!1),d),[e._v("\n         Kembalikan\n       ")])]}}],null,!0)},[e._v(" "),t("v-list",e._l(e.Stations,(function(d){return t("v-list-item",{key:d.id},[t("v-btn",{on:{click:function(t){return e.returns(n.id,d.id,n.bike_id)}}},[e._v("\n           "+e._s(d.name)+"\n         ")])],1)})),1)],1)],1)})),e._v(" "),t("v-main",[t("v-btn",{on:{click:e.handleLogOut}},[e._v("\n       log out\n     ")])],1)],2)}),[],!1,null,null,null);n.default=component.exports;F()(component,{VBtn:w.a,VContainer:O.a,VList:D.a,VListItem:V.a,VMain:E.a,VMenu:j.a})}}]);